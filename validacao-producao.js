/**
 * üéØ Valida√ß√£o Final em Produ√ß√£o
 * 
 * Execute este script ap√≥s implementar em produ√ß√£o para
 * validar se tudo est√° funcionando corretamente.
 */

window.validacaoProducao = function () {
    console.log('üéØ VALIDA√á√ÉO FINAL EM PRODU√á√ÉO');
    console.log('='.repeat(50));
    console.log('‚è∞ Timestamp:', new Date().toLocaleString('pt-BR'));

    // 1. Verificar estrutura do formul√°rio
    console.log('\nüìã 1. VERIFICANDO ESTRUTURA:');
    const form = document.getElementById('contactForm');

    if (!form) {
        console.error('‚ùå FALHA CR√çTICA: Formul√°rio n√£o encontrado!');
        return false;
    }

    const estruturaOK = form.method === 'POST' &&
        form.action.includes('activehosted.com/proc.php');

    console.log(`   Method: ${form.method} ${form.method === 'POST' ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Action: ${form.action}`);
    console.log(`   Estrutura: ${estruturaOK ? '‚úÖ OK' : '‚ùå FALHA'}`);

    // 2. Verificar tags (mais cr√≠tico)
    console.log('\nüéØ 2. VERIFICANDO TAGS (CR√çTICO):');
    let tagsOK = 0;
    const tagsEsperadas = [1, 2, 3, 4, 5];

    tagsEsperadas.forEach(id => {
        const tag = form.querySelector(`input[name="p[${id}]"]`);
        if (tag && tag.value === '1') {
            console.log(`   ‚úÖ p[${id}] configurada corretamente`);
            tagsOK++;
        } else {
            console.log(`   ‚ùå p[${id}] ausente ou incorreta`);
        }
    });

    console.log(`   üìä Tags OK: ${tagsOK}/${tagsEsperadas.length}`);

    if (tagsOK === 0) {
        console.error('   üö® FALHA CR√çTICA: Nenhuma tag configurada!');
        console.log('   üí° A tag "catalogo-fast-homes-solicitado" N√ÉO ser√° aplicada!');
        return false;
    }

    // 3. Verificar campos UTM
    console.log('\nüìã 3. VERIFICANDO CAMPOS UTM:');
    const camposUTM = [
        { name: 'field[6]', desc: 'utm_source' },
        { name: 'field[7]', desc: 'utm_medium' },
        { name: 'field[8]', desc: 'utm_campaign' },
        { name: 'field[9]', desc: 'utm_term' },
        { name: 'field[10]', desc: 'utm_content' },
        { name: 'field[11]', desc: 'page_referrer' },
        { name: 'field[12]', desc: 'current_url' }
    ];

    let utmsOK = 0;
    camposUTM.forEach(campo => {
        const input = form.querySelector(`input[name="${campo.name}"]`);
        if (input) {
            console.log(`   ‚úÖ ${campo.desc}: "${input.value || 'vazio'}"`);
            utmsOK++;
        } else {
            console.log(`   ‚ùå ${campo.desc}: AUSENTE`);
        }
    });

    console.log(`   üìä Campos UTM: ${utmsOK}/${camposUTM.length}`);

    // 4. Verificar JavaScript
    console.log('\nüìú 4. VERIFICANDO SCRIPTS:');
    console.log(`   fastHomesForm: ${typeof window.fastHomesForm !== 'undefined' ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Splide: ${typeof window.Splide !== 'undefined' ? '‚úÖ' : '‚ùå'}`);

    // 5. Status geral
    console.log('\nüìä 5. STATUS GERAL:');
    const statusGeral = estruturaOK && tagsOK > 0 && utmsOK >= 5;

    if (statusGeral) {
        console.log('   üéâ TUDO OK! Formul√°rio pronto para produ√ß√£o');
        console.log('   ‚úÖ Estrutura correta');
        console.log('   ‚úÖ Tags configuradas');
        console.log('   ‚úÖ UTMs mapeados');
        return true;
    } else {
        console.error('   ‚ùå PROBLEMAS ENCONTRADOS!');
        console.log('   üîß Corrija os problemas antes de usar em produ√ß√£o');
        return false;
    }
};

window.testeCompleto = function () {
    console.log('üß™ TESTE COMPLETO DO FORMUL√ÅRIO');
    console.log('='.repeat(50));

    // 1. Validar estrutura
    const estruturaOK = window.validacaoProducao();

    if (!estruturaOK) {
        console.error('‚ùå Teste interrompido - estrutura com problemas');
        return;
    }

    // 2. Preencher dados de teste
    console.log('\nüìù PREENCHENDO DADOS DE TESTE:');
    const form = document.getElementById('contactForm');

    // Dados de teste
    const dadosTeste = {
        fullname: 'Teste Valida√ß√£o Produ√ß√£o',
        email: 'teste.validacao@fasthomes.com.br',
        phone: '(11) 99999-8888'
    };

    Object.entries(dadosTeste).forEach(([campo, valor]) => {
        const input = form.querySelector(`input[name="${campo}"]`);
        if (input) {
            input.value = valor;
            console.log(`   ‚úÖ ${campo}: ${valor}`);
        } else {
            console.log(`   ‚ùå ${campo}: campo n√£o encontrado`);
        }
    });

    // 3. Preencher UTMs de teste
    console.log('\nüìã PREENCHENDO UTMs DE TESTE:');
    const utmsTeste = {
        'field[6]': 'teste-producao',
        'field[7]': 'validacao',
        'field[8]': 'formulario-oficial',
        'field[9]': 'fast homes',
        'field[10]': 'teste-tag',
        'field[11]': document.referrer || 'teste-direto',
        'field[12]': window.location.href
    };

    Object.entries(utmsTeste).forEach(([campo, valor]) => {
        const input = form.querySelector(`input[name="${campo}"]`);
        if (input) {
            input.value = valor;
            console.log(`   ‚úÖ ${campo}: ${valor}`);
        }
    });

    // 4. Mostrar dados finais
    console.log('\nüìã DADOS FINAIS DO FORMUL√ÅRIO:');
    const formData = new FormData(form);
    for (let [key, value] of formData.entries()) {
        if (key.startsWith('p[') || key.startsWith('field[') ||
            ['fullname', 'email', 'phone'].includes(key)) {
            console.log(`   ${key}: ${value}`);
        }
    }

    console.log('\n‚ö†Ô∏è  PRONTO PARA TESTE REAL!');
    console.log('   1. Verifique os dados acima');
    console.log('   2. Clique em "Receber Cat√°logo" se quiser testar');
    console.log('   3. Monitore o ActiveCampaign ap√≥s o envio');
    console.log('   4. Confirme se a tag foi aplicada');
};

window.monitorarSubmit = function () {
    console.log('üëÄ MONITOR DE SUBMIT ATIVADO');

    const form = document.getElementById('contactForm');
    if (!form) {
        console.error('‚ùå Formul√°rio n√£o encontrado para monitorar');
        return;
    }

    // Interceptar submit
    form.addEventListener('submit', function (e) {
        console.log('üöÄ SUBMIT DETECTADO!');
        console.log('‚è∞ Timestamp:', new Date().toLocaleString('pt-BR'));

        // Mostrar dados sendo enviados
        const formData = new FormData(form);
        console.log('üì§ DADOS SENDO ENVIADOS:');

        for (let [key, value] of formData.entries()) {
            console.log(`   ${key}: ${value}`);
        }

        console.log('\nüéØ TAGS QUE SER√ÉO APLICADAS:');
        for (let i = 1; i <= 5; i++) {
            const tag = form.querySelector(`input[name="p[${i}]"]`);
            if (tag && tag.value === '1') {
                console.log(`   ‚úÖ Tag p[${i}] ser√° aplicada`);
            }
        }

        console.log('\nüìã PR√ìXIMOS PASSOS:');
        console.log('   1. Aguarde o processamento');
        console.log('   2. Verifique o ActiveCampaign');
        console.log('   3. Procure pelo email enviado');
        console.log('   4. Confirme a tag "catalogo-fast-homes-solicitado"');
    });

    console.log('‚úÖ Monitor ativo - envie o formul√°rio para ver os dados');
};

// Fun√ß√£o para executar tudo de uma vez
window.validacaoCompleta = function () {
    console.clear();
    console.log('üéØ FAST HOMES - VALIDA√á√ÉO COMPLETA DE PRODU√á√ÉO');
    console.log('üîó GitHub: lp-captacao-de-cliente-fh');
    console.log('üìÖ ' + new Date().toLocaleString('pt-BR'));
    console.log('='.repeat(60));

    // 1. Valida√ß√£o estrutural
    window.validacaoProducao();

    // 2. Ativar monitor
    setTimeout(() => {
        window.monitorarSubmit();

        console.log('\nüéØ COMANDOS DISPON√çVEIS:');
        console.log('   window.testeCompleto() - Preenche e testa formul√°rio');
        console.log('   window.validacaoProducao() - Re-valida estrutura');
        console.log('   window.debugTags() - Debug espec√≠fico das tags');

    }, 1000);
};

// Auto-executar em produ√ß√£o ap√≥s carregamento
document.addEventListener('DOMContentLoaded', () => {
    // Aguardar carregamento completo
    setTimeout(() => {
        if (window.location.hostname !== 'localhost' &&
            window.location.hostname !== '127.0.0.1') {
            console.log('üåê AMBIENTE DE PRODU√á√ÉO DETECTADO');
            console.log('üìã Execute: window.validacaoCompleta()');
        } else {
            console.log('üõ†Ô∏è  AMBIENTE LOCAL - Valida√ß√£o manual dispon√≠vel');
            console.log('üìã Execute: window.validacaoCompleta()');
        }
    }, 3000);
});
